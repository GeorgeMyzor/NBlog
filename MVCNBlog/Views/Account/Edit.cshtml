@model MVCNBlog.ViewModels.AccountViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Account</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <input type="hidden" name="roleId" value="@Model.Role.RoleId" />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@using (Html.BeginRouteForm("EditAccount", new { action = "EditVipStatus" }))
{
    @Html.HiddenFor(model => model.Id)
    <input type="hidden" name="roleId" value="@Model.Role.RoleId"/>
    <div class="form-horizontal">
        <div class="form-group">
            <label class="control-label col-md-2">Is VIP</label>
            <div class="col-md-10">
                @if (Model.PayedRole != null)
                {
                    <input type="checkbox" name="isVip" checked/>
                }
                else
                {
                    <input type="checkbox" name="isVip"/>
                }
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Change Vip status" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@using (Html.BeginRouteForm("EditAccount", new { action = "UploadPicture" } , FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)
    <fieldset>
        <legend>Add image</legend>

        <div class="editor-label">Picture file</div>
        <div class="editor-field">
            <input type="file" name="uploadImage" />
        </div>

        <p>
            <input type="submit" value="Add" />
        </p>
    </fieldset>
}
<div>
    @Html.RouteLink("Go back", "ViewAccount", new { }, new { @class = "btn btn-default" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
