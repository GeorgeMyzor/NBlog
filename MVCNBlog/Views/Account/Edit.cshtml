@model MVCNBlog.ViewModels.AccountViewModel

@{
    ViewBag.Title = "Edit";
    AjaxOptions ajaxOpts = new AjaxOptions
    {
        OnSuccess = "OnSuccess",
        HttpMethod = "Post",
        UpdateTargetId = "userPic",
        Url = Url.Action("UploadPicture"),
        LoadingElementId = "loading",
        LoadingElementDuration = 1000,
    };
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Account</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div id="userPic">
            @Html.Raw("<img style='width:80px; height:60px;' src=\"data:image/jpeg;base64,"
                      + Convert.ToBase64String(Model.UserPic) + "\" />")

        </div>
            <b>User name:</b>
            @Html.DisplayFor(modelItem => modelItem.Name)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <input type="hidden" name="roleId" value="@Model.Role.RoleId" />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@using (Html.BeginRouteForm("EditAccount", new { action = "EditVipStatus" }))
{
    @Html.HiddenFor(model => model.Id)
    <input type="hidden" name="roleId" value="@Model.Role.RoleId"/>
    <div class="form-horizontal">
        <div class="form-group">
            <label class="control-label col-md-2">Is VIP</label>
            <div class="col-md-10">
                @if (Model.PayedRole != null)
                {
                    <input type="checkbox" name="isVip" checked/>
                }
                else
                {
                    <input type="checkbox" name="isVip"/>
                }
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Change Vip status" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div id="loading" class="load" style="display: none">
    <p>Loading Picture...</p>
</div>
@using (Html.BeginRouteForm("EditAccount", new { action = "UploadPicture" }, FormMethod.Post, new { id = "uploadForm", enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Id)
    <fieldset>
        <legend>Add image</legend>

        <div class="editor-label">Picture file</div>
        <div class="editor-field">
            <input type="file" id="uploadImage" name="uploadImage" />
        </div>

        <p>
            <input type="submit" id="picSubmit" value="Add" />
        </p>
    </fieldset>
}
<div>
    @Html.RouteLink("Go back", "ViewAccount", new { }, new { @class = "btn btn-default" })
</div>

@section Scripts {

    <script type="text/javascript" src="@Url.Content("~/scripts/jquery.unobtrusive-ajax.js")"></script>
    <script>

        $(document).ready(function() {
            $('#uploadForm').submit(function(e) {
                if (window.FormData !== undefined) {

                    var fileUpload = $("#uploadImage").get(0);
                    var files = fileUpload.files;

                    var fileData = new FormData();

                    for (var i = 0; i < files.length; i++) {
                        fileData.append(files[i].name, files[i]);
                    }

                    e.preventDefault();
                    $.ajax({
                        url: '/Account/UploadPicture',
                        type: "POST",
                        contentType: false,
                        processData: false,
                        data: fileData,
                        success: function(result) {
                            var results = $('#userPic');
                            results.empty();

                            results.append("<img style='width:80px; height:60px;' src=\"data:image/jpeg;base64,"
                                + result.ProfilePicture + "\" />");
                        },
                        error: function(err) {
                            alert("Cannot upload image.");
                        }
                    });
                } else {
                    alert("FormData is not supported.");
                }
            });
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
