@model MVCNBlog.ViewModels.AccountViewModel

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

    <div class="form-horizontal">
        <h4>Account</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div id="userPic">
            @Html.Raw("<img style='width:80px; height:60px;' src=\"data:image/jpeg;base64,"
                      + Convert.ToBase64String(Model.UserPic) + "\" />")
            <b>User name:</b>
            @Html.DisplayFor(modelItem => modelItem.Name)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayTextFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubscriptionCost, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DisplayTextFor(model => model.SubscriptionCost)
                @Html.ValidationMessageFor(model => model.SubscriptionCost, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rank, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DisplayTextFor(model => model.Rank)
                @Html.ValidationMessageFor(model => model.Rank, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Role, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <select class="form-control" name="roleId">
                    <option value="@Model.Role.RoleId" selected>@Model.Role.RoleName</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            <label class = "control-label col-md-2">Is VIP</label>
            <div class="col-md-10">
                @if (Model.PayedRole != null)
                {
                    <input type="checkbox" name="isVip" checked/>
                }
                else
                {
                    <input type="checkbox" name="isVip"/>
                }
            </div>
        </div>
    </div>


<div>
    @Html.RouteLink("Edit account", "AccountAction", new { action = "Edit"}, new { @class = "btn btn-default" })
</div>
<div>
    @Html.RouteLink("Delete account", "AccountAction", new { action = "Delete" }, new { @class = "btn btn-default" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
