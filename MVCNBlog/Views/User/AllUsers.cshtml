@using MVCNBlog.ViewModels.Roles
@model MVCNBlog.ViewModels.ListViewModel<MVCNBlog.ViewModels.User.UserViewModel>

    @foreach (var item in Model.ViewModels)
    {
        @Html.HiddenFor(modelItem => item.Id)

        <div class="clearfix single_content">
            <div class="clearfix user_picture floatleft">
                <a href="@Url.RouteUrl("UserAction", new {action = "Index", name = item.Name, id = item.Id})">
                    @Html.Raw("<img style='width:100px; height:100px;' src=\"data:image/jpeg;base64,"
                              + Convert.ToBase64String(item.UserPic) + "\" />")
                </a>

            </div>
            <div class="clearfix post_detail">
                <div class="clearfix post_excerpt">
                    <p>
                        <b>User name:</b>
                        @Html.DisplayFor(modelItem => item.Name)
                    </p>
                    <p>
                        <b>Creation date:</b>
                        @Html.DisplayTextFor(modelItem => item.CreationDate)
                    </p>
                    <p>
                        <b>Rank:</b>
                        @Html.DisplayTextFor(modelItem => item.Rank)
                    </p>
                    <p>
                        <b>Role:</b>
                        @Html.DisplayFor(modelItem => item.Role.RoleName)
                    </p>
                    @if (false)//(item.PayedRole != null)
                    {
                        <p>
                            <b> Payed role:</b>
                            @Html.DisplayTextFor(modelItem => ((IRole) item.PayedRole).RoleName)
                        </p>
                    }
                    <p>
                        <i style="text-indent: 0px" class="fa fa-user"></i>@Html.RouteLink("View", "UserAction", new { action = "Index", name = item.Name, id = item.Id })
                    </p>
                </div>
            </div>
        </div>
    }

    <div class="pagination pager">
        <nav>
            <ul>
                @Html.PageLinks(Model.PagingInfo, x => Ajax.RouteLink(x.ToString(), "PagedUsers", new {page = x}, new AjaxOptions { UpdateTargetId = "allPage", OnSuccess = "page_cleanup"}).ToString())
            </ul>
        </nav>
    </div>

