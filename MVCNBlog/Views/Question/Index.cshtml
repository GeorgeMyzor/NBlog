@using System.Globalization
@model MVCNBlog.ViewModels.QuestionViewModel
@{
    ViewBag.Title = Model.Title;
    AjaxOptions ajaxOpts = new AjaxOptions
    {
        Url = Url.Action("Create","Answer"),
        UpdateTargetId = "comments_output",
        InsertionMode = InsertionMode.Replace,
        OnSuccess = "clearInput"
    };
}
<section id="content_area" style="">
    <div class="clearfix wrapper main_content_area">

        <div class="clearfix main_content floatleft">


            <div class="clearfix content">

                <h1>@Model.Title </h1>
                <div class="clearfix post-meta">
                    <p>
                        <span>
                            <i class="fa fa-user"></i>
                            @if (Model.Author != null)
                            {
                                @Html.RouteLink(Model.Author.Name, "UserAction", new
                                {
                                    action = "index",
                                    name = Model.Author.Name,
                                    id = Model.Author.Id
                                })
                            }
                            else
                            {
                                @Html.Raw("DELETED")
                            }
                        </span>
                        <span>
                            <i class="fa fa-clock-o"></i>@Model.PublicationDate.ToString("dd MMM yyyy", CultureInfo.InvariantCulture)
                        </span>
                        <span><i class="fa fa-comment"></i> @Model.Answers.Count() answers</span>
                    </p>
                </div>

                <p>
                    @Html.HighLightTags(Model.Header)
                </p>
                

                <p>
                    @Html.HighLightTags(Model.Content)
                </p>

                @if (Model.Author?.Email == User.Identity.Name || Roles.IsUserInRole("Moderator") ||
                 Roles.IsUserInRole("Administrator"))
                {
                    @Html.RouteLink("Edit question", "QuestionAction", new { action = "edit", title = Model.Title.RemoveSpecialCharacters(), id = Model.Id },
                        new { @class = "btn" })
                    @Html.RouteLink("Delete question", "QuestionAction", new { action = "delete", title = Model.Title.RemoveSpecialCharacters(), id = Model.Id },
                        new { @class = "btn" })
                }

                <div class="more_post_container">
                    <h2>Answers:</h2>
                    <div class="more_post">
                        <div id="comments_output">
                            @Html.Partial("Answers", Model.Answers)
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class="clearfix sidebar_container floatright">
            @if (!User.Identity.IsAuthenticated)
            {
                <div class="clearfix newsletter">
                    @Html.Partial("_Login", new LoginUserViewModel())
                </div>
            }
            <div class="clearfix sidebar">
                @Html.Action("PopularSide", "Article")

                @Html.Action("RecentSide", "Article")
            </div>
        </div>

        <div style="margin-top: 10px">
            @using (Ajax.BeginForm("Create", "Answer", ajaxOpts))
            {
                @Html.AntiForgeryToken()
                <textarea cols="94" rows="3" id="comment_input" name="Content" placeholder="Type your answer..."></textarea>
                <br />
                <label id="comment_error" class="text-danger">@TempData["CommentError"]</label>
                <input type="hidden" name="ArticleId" value="@Model.Id" />

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Answer" class="btn btn-default" />
                    </div>
                </div>
            }
        </div>

        <div>
            @Html.RouteLink("Back to articles", "AllQuestions", new { action = "All" },
            new { @class = "btn btn-default" })
        </div>
    </div>
</section>


@section scripts {
    <script type="text/javascript" src="~/Scripts/CustomScripts/refresh-comments.js"></script>
}