@using System.Globalization
@model MVCNBlog.ViewModels.ArticleViewModel
@{
    ViewBag.Title = "Home Page";
    AjaxOptions ajaxOpts = new AjaxOptions
    {
        UpdateTargetId = "tableBody",
        OnSuccess = "processData",
        InsertionMode = InsertionMode.Replace
    };
}
@section scripts {
    <script type="text/javascript" src="@Url.Content("~/scripts/jquery.unobtrusive-ajax.js")"></script>

    <script type="text/javascript">
        function processData(data) {
            var target = $("#createCommentForm");
            $(target).each(function () {
                this.reset();
            });
        }
    </script>
}


<h2>Article</h2>
<b>Title:</b>
@Html.DisplayFor(modelItem => Model.Title)
<br />
<b>Header:</b>
@Html.HighLightTags(Model.Header)
<br/>
<b>Content:</b>
@Html.HighLightTags(Model.Content)
<br />
<b>Publication date:</b>
<p>@Model.PublicationDate.ToString("dd MMMM yyyy", CultureInfo.InvariantCulture)</p>
<br />
<b>Author:</b>
@Html.DisplayTextFor(modelItem => Model.Author.Name)

@Html.RouteLink("View user", "UserAction", new { action = "Index", name = Model.Author?.Name, id = Model.Author?.Id },
            new { @class = "btn btn-default" })
<br />
<b>Tags:</b>
@foreach (var tag in Model.Tags)
{
    <b> &nbsp;</b> @Html.DisplayFor(modelItem => tag)
}

<div id="tableBody">
    @Html.Partial("Comments", Model.Comments)
</div>

<br/>
    @using (Ajax.BeginForm("Create","Comment", null, ajaxOpts, new { id = "createCommentForm"}))
    {
        @Html.AntiForgeryToken()
        <input type="text" name="Content" placeholder="Type to begin..." />
            <label>@TempData["CommentError"]</label>
            <input type="hidden" name="ArticleId" value="@Model.Id" />

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Add comment" class="btn btn-default" />
                </div>
            </div>
    }

    <br />
    @Html.RouteLink("Edit article", "ArticleAction", new { action = "Edit", title = Model.Title, id = Model.Id },
    new { @class = "btn btn-default" })
    @Html.RouteLink("Delete article", "ArticleAction", new { action = "Delete", title = Model.Title, id = Model.Id },
    new { @class = "btn btn-default" })

    <br />

    <div>
        @Html.RouteLink("Back to articles", "AllArticles", new { action = "All" },
    new { @class = "btn btn-default" })
    </div>
