@using System.Globalization
@model MVCNBlog.ViewModels.ArticleViewModel
@{
    ViewBag.Title = Model.Title;
    AjaxOptions ajaxOpts = new AjaxOptions
    {
        OnSuccess = "processData"
    };
}
<section id="content_area" style="">
    <div class="clearfix wrapper main_content_area">

        <div class="clearfix main_content floatleft">


            <div class="clearfix content">

                <h1>@Model.Title </h1>
                <div class="clearfix post-meta">
                    <p>
                        <span>
                            <i class="fa fa-user"></i>
                            @if (Model.Author != null)
                            {
                                @Html.RouteLink(Model.Author.Name, "UserAction", new
                           {
                               action = "index",
                               name = Model.Author.Name,
                               id = Model.Author.Id
                           })
                            }
                            else
                            {
                                @Html.Raw("DELETED")
                            }
                        </span>
                        <span>
                            <i class="fa fa-clock-o"></i>@Model.PublicationDate.ToString("dd MMM yyyy", CultureInfo.InvariantCulture)
                        </span>
                        <span><i class="fa fa-comment"></i> @Model.Comments.Count() comments</span>
                        <span>
                            <i class="fa fa-hashtag" aria-hidden="true"></i> @Html.Raw(string.Join(", ", Model.Tags))
                        </span>
                    </p>
                </div>

                <p>
                    @Html.HighLightTags(Model.Header)
                </p>

                <div class="rectangle_large aligncenter"> 
                    @if (Model.HeaderPicture != null)
                    {
                        @Html.Raw("<img src=\"data:image/jpeg;base64," + Convert.ToBase64String(Model.HeaderPicture) + "\" />")
                    }
                </div>


                <p>
                    @Html.HighLightTags(Model.Content)
                </p>

                @if (Model.Author?.Email == User.Identity.Name || Roles.IsUserInRole("Moderator") ||
                 Roles.IsUserInRole("Administrator"))
                {
                    @Html.RouteLink("Edit article", "ArticleAction", new { action = "edit", title = Model.Title, id = Model.Id },
                        new { @class = "btn" })
                    @Html.RouteLink("Delete article", "ArticleAction", new { action = "delete", title = Model.Title, id = Model.Id },
                        new { @class = "btn" })
                }

                <div class="more_post_container">
                    <h2>Comments:</h2>
                    <div class="more_post">
                        <div id="comments_output">
                            @Html.Partial("Comments", Model.Comments)
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class="clearfix sidebar_container floatright">
            @if (!User.Identity.IsAuthenticated)
            {
                <div class="clearfix newsletter">
                    @Html.Partial("_Login", null)
                </div>
            }
            <div class="clearfix sidebar">
                @Html.Action("PopularSide")

                @Html.Action("RecentSide")
            </div>
        </div>

        <div style="margin-top: 10px">
            @using (Ajax.BeginForm("Create", "Comment", null, ajaxOpts, new { id = "createCommentForm" }))
            {
                @Html.AntiForgeryToken()
                <textarea cols="94" rows="3" id="comment_input" name="Content" placeholder="Type your comment..."></textarea>
                <br />
                <label id="comment_error" class="text-danger">@TempData["CommentError"]</label>
                <input type="hidden" name="ArticleId" value="@Model.Id" />

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Add comment" class="btn btn-default" />
                    </div>
                </div>
            }
        </div>

        <div>
            @Html.RouteLink("Back to articles", "AllArticles", new { action = "All" },
            new { @class = "btn btn-default" })
        </div>
    </div>
</section>


@section scripts {
    <script type="text/javascript" src="@Url.Content("~/scripts/jquery.unobtrusive-ajax.js")"></script>

    <script type="text/javascript" src="~/Scripts/CustomScripts/refresh-comments.js"></script>
}